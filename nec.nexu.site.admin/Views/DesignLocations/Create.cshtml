@using System.Configuration
@model nec.nexu.site.admin.Models.DesignLocationAdminViewModel

@{
    ViewBag.Title = "Create";
}


<script src="~/Scripts/jquery-2.1.1.min.js"></script>
<script type="text/javascript">

    $(document).ready(function () {

        $('#DesignLocation_TemplateId').change(function () {
            var url = '@ConfigurationManager.AppSettings["api_url"]' + 'api/masterdata/producttemplate/' + $(this).val() + '/views';

            $.ajax({
                cache: true,
                type: 'GET',
                url: url,
                dataType: 'json',
                //jsonCallback: 'nexuJson',
                crossDomain: true,
                success: function(data) {
                    $('#TemplateViewId').html('');
                    $.each(data, function(id, option) {
                        $('#TemplateViewId').append($('<option></option>').val(option.Id).html(option.DisplayName));
                    });
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    alert('failed to retrieve product template views. '  + ' . ' + thrownError);
                }
            });
        });
        
    });

      

   // });

</script>

<h2>Create</h2>


@using (Html.BeginForm(new { id = "CreatedDesignLocationForm"})) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>DesignLocation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.DesignLocation.TemplateId, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(dl => dl.DesignLocation.TemplateId, Model.ProductTemplateListItems, string.Empty)

            </div>
            <div class="form-group">
                <label>View</label>
                <select id="TemplateViewId" name="TemplateViewId"></select>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.DesignLocation.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DesignLocation.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DesignLocation.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DesignLocation.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DesignLocation.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DesignLocation.DisplayName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DesignLocation.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DesignLocation.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DesignLocation.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DesignLocation.SortOrder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DesignLocation.SortOrder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DesignLocation.SortOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
